default:
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker info


stages:
  - build-frontend
  - build-backend
  - deploy-backend


services:
  - name: postgres:latest
    alias: postgres

variables:
  POSTGRES_DB: empmanagement
  POSTGRES_USER: ${DB_USERNAME}
  POSTGRES_PASSWORD: ${DB_PASSWORD}

build-frontend:
  stage: build-frontend
  image: node:20.16-alpine
  script:
    - cd Frontend/EmpManagementApp
    - npm install
    - CI=false npm run build
  # artifacts:
  #   paths:
  #     - Frontend/EmpManagementApp/build

build-backend:
  stage: build-backend
  script:
    - echo "Building the backend..."
    - cd Backend/EmpManagementAPI
    - docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
    - docker build -t duydangtr/emp_management:$CI_COMMIT_SHA .
    - docker push duydangtr/emp_management:$CI_COMMIT_SHA

  # artifacts:
  #   paths:
  #     - Backend/EmpManagementAPI/build/libs/*.jar



deploy_backend:
  stage: deploy-backend
  script:
    - echo "Deploying the backend..."
    - docker pull duydangtr/emp_management:$CI_COMMIT_SHA
    - docker rm -f emp-management-container
    - docker run -d -p 8080:8080 --name emp-management-container duydangtr/emp_management:$CI_COMMIT_SHA
  tags:
    - ec2-runner
  only:
    - deploy-to-ec2

