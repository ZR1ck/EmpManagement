default:
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker info

stages:
  # - build-frontend
  - build-backend
  - deploy-backend

variables:
  POSTGRES_DB: empmanagement
  POSTGRES_USER: ${DB_USERNAME}
  POSTGRES_PASSWORD: ${DB_PASSWORD}
  POSTGRES_HOST: ${RDS_ENDPOINT}

# build-frontend:
#   stage: build-frontend
#   image: node:20.16-alpine
#   script:
#     - cd Frontend/EmpManagementApp
#     - npm install
#     - CI=false npm run build
  # artifacts:
  #   paths:
  #     - Frontend/EmpManagementApp/build

build-backend:
  stage: build-backend
  script:
    - echo "Building the backend..."
    - cd Backend/EmpManagementAPI
    - echo "duydang20031501" | docker login -u "duydangtr4@gmail.com" --password-stdin
    - docker build -t duydang812/emp_management:$CI_COMMIT_SHA .
    - docker push duydang812/emp_management:$CI_COMMIT_SHA
  # artifacts:
  #   paths:
  #     - Backend/EmpManagementAPI/build/libs/*.jar

deploy_backend:
  stage: deploy-backend
  script:
    - echo "Deploying the backend..."
    - docker pull duydang812/emp_management:$CI_COMMIT_SHA
    - docker rm -f emp-management-container
    - docker run -d -p 8080:8080 --name emp-management-container duydang812/emp_management:$CI_COMMIT_SHA
  tags:
    - ec2-runner
  only:
    - deploy-to-ec2